# Service config
server:
  port: ${GATEWAY_PORT:6060}
spring:
  application:
    version: v1
    name: gateway-server
  cloud:
    gateway:
      loadbalancer:
        use404: true

# Gateway config
gateway:
  tail-path: /**
  tail-regex: /(?<path>.*)
  tail-regex-replacement: /$\{path}
  intercept-urls:
    store: ${STORE_POINT_SERVICE_INTERCEPT_URL:/api/${spring.application.version}/store}
    product: ${PRODUCT_POINT_SERVICE_INTERCEPT_URL:/api/${spring.application.version}/product}
  servers:
    store:
      url: ${STORE_POINT_SERVICE_URL:localhost}
      port: ${STORE_POINT_SERVICE_PORT:4041}
      postfix: ${STORE_POINT_SERVICE_PORT:/store/}
      name: ${STORE_POINT_SERVICE_NAME:storeServiceApp}
      desc: ${STORE_POINT_SERVICE_DESC:empty}
    product:
      url: ${PRODUCT_SERVICE_URL:lb://localhost}
      port: ${PRODUCT_SERVICE_PORT:4042}
      postfix: ${PRODUCT_SERVICE_PORT:/product/}
      name: ${PRODUCT_SERVICE_NAME:productServiceApp}
      desc: ${PRODUCT_SERVICE_DESC:empty}

# load balance config
ribbon:
  eureka:
    enabled: false

storeServiceApp:
  ribbon:
    listOfServers: localhost:4041
    ServerListRefreshInterval: 1000
    retryableStatusCodes: 404, 500
    MaxAutoRetriesNextServer: 1

productServiceApp:
  ribbon:
    listOfServers: localhost:4042
    ServerListRefreshInterval: 1000
    retryableStatusCodes: 404, 500
    MaxAutoRetriesNextServer: 1

# Eureka config
eureka:
  instance:
    prefer-ip-address: true
    appname: gateway-server
    lease-renewal-interval-in-seconds: ${RENEWAL_INTERVAL:20}
    lease-expiration-duration-in-seconds: ${LEASE_EXPIRATION:40}
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
        defaultZone: http://${EURIKA_SERVER_HOST:localhost}:${EURIKA_SERVER_PORT:5050}/eureka

# Circuit breaker config
resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      failureRateThreshold: ${GATEWAY_FAILURE_RATE:10}
      slowCallRateThreshold: ${GATEWAY_SLOW_CALL_RATE:10}
      slowCallDurationThreshold: ${GATEWAY_SLOW_DURATION:2000ms}
#      slidingWindowType: TIME_BASED
#      slidingWindowSize: 100
      minimumNumberOfCalls: ${GATEWAY_MIN_CALL_NUMBER:10}
      waitDurationInOpenState: ${GATEWAY_WAI_DURATION:5s}
      permittedNumberOfCallsInHalfOpenState: ${GATEWAY_PERM_CALL_HALF_STATE:20}
      automaticTransitionFromOpenToHalfOpenEnabled: ${GATEWAY_TRANSITION_AUTO:true}
      recordExceptions:
        - java.net.ConnectException
        - java.lang.NullPointerException
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException

# Logging config
logging:
  pattern:
    consoleg: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"
  level:
    ROOT: ${STORE_POINT_ROOT_LOG_LEVEL:INFO}